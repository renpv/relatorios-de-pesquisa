#!/bin/sh

#################
# Terminal Colors
#################

###
# Regular
###
color_regular_black='\033[0;30m'
color_regular_red='\033[0;31m'
color_regular_green='\033[0;32m'
color_regular_yellow='\033[0;33m'
color_regular_blue='\033[0;34m'
color_regular_purple='\033[0;35m'
color_regular_cyan='\033[0;36m'
color_regular_white='\033[0;37m'

###
# Bold
###
color_bold_black='\033[1;30m'
color_bold_red='\033[1;31m'
color_bold_green='\033[1;32m'
color_bold_yellow='\033[1;33m'
color_bold_blue='\033[1;34m'
color_bold_purple='\033[1;35m'
color_bold_cyan='\033[1;36m'
color_bold_white='\033[1;37m'

###
# Underline
###
color_underline_black='\033[4;30m'
color_underline_red='\033[4;31m'
color_underline_green='\033[4;32m'
color_underline_yellow='\033[4;33m'
color_underline_blue='\033[4;34m'
color_underline_purple='\033[4;35m'
color_underline_cyan='\033[4;36m'
color_underline_white='\033[4;37m'

###
# Background
###
color_background_black='\033[40m'
color_background_red='\033[41m'
color_background_green='\033[42m'
color_background_yellow='\033[43m'
color_background_blue='\033[44m'
color_background_purple='\033[45m'
color_background_cyan='\033[46m'
color_background_white='\033[47m'

color_reset='\033[0m'

###########
# Functions
###########

function message_failure() {
    printf "${color_bold_white}${color_background_red} 🤦  $1 ${color_reset}\n"
}

function message_success() {
    printf "${color_bold_black}${color_background_green} $1 🍺  ${color_reset}\n"
}

function message_warning() {
    printf "${color_bold_black}${color_background_yellow} ⚠️ $1 ${color_reset}\n"
}

function message_info() {
    printf "${color_bold_black}${color_background_blue} ☝️️  $1 ${color_reset}\n"
}

NC='\033[0m'
BRed='\033[1;31m'
BBlue='\033[1;34m'

remote="$1"
url="$2"


BRANCH=$(git branch | grep '*' | sed 's/* //')

echo "╭───────────────────────────────────────────────╮"
printf "|〈〈〈 ${color_bold_white}Fazendo Push na Branch: ${color_bold_blue} ${BRANCH} ${color_reset} 〉〉〉|\n"
echo "╰───────────────────────────────────────────────╯"
echo

if [ $BRANCH -ne 'develop' ]; then 
	message_warning " Só é possível realizar Pull Request na branch:  ${color_bold_blue} ${BRANCH}"
	echo
	exit 1
fi

# 1. Verificando o estilo do código com PHP Coding Standards Fixer
echo "╭─────────────────────────────────────────────────────────────────────────────╮"
printf "|〈〈〈 ${color_bold_white}Verificando o estilo do código com ${color_bold_blue} PHP Coding Standards Fixer ${color_reset} 〉〉〉|\n"
echo "╰─────────────────────────────────────────────────────────────────────────────╯"
echo
composer validate-style
STATUS_CODE=$?
if [ $STATUS_CODE -ne 0 ]; then 
	message_warning "O estilo do código precisa de revisão conforme análise do php-cs-fixer"
	echo
	exit 1
fi

# 2. Executando testes com PHPUnit
echo "╭────────────────────────────────────────────────╮"
printf "|〈〈〈 ${color_bold_white}Executando os testes com ${color_bold_blue} PHPUnit ${color_reset} 〉〉〉|\n"
echo "╰────────────────────────────────────────────────╯"
echo
composer test
STATUS_CODE=$?
if [ $STATUS_CODE -ne 0 ]; then 
	message_warning "O código não passou nos testes executados com PHPUnit"
	echo
	exit 1
fi

# 3. Validando o código com PHPStan
echo "╭──────────────────────────────────────────────╮"
printf "|〈〈〈 ${color_bold_white}Validando o código com ${color_bold_blue} PHPStan ${color_reset} 〉〉〉|\n"
echo "╰──────────────────────────────────────────────╯"
echo
composer phpstan
STATUS_CODE=$?
if [ $STATUS_CODE -ne 0 ]; then 
	message_warning "O código não passou na validação do PHPStan"
	echo
	exit 1
fi

message_success "Não foram detectados problemas nos testes locais 👏 👏 👏 👏 "

exit 0